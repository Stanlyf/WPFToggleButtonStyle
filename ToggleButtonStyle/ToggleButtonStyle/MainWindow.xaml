<Window x:Class="ToggleButtonStyle.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ToggleButtonStyle"
        mc:Ignorable="d" ResizeMode="NoResize"
        Title="Customized Toggle" Height="100" Width="300">
    <Window.Resources>
        <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.HighContrastKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnChecked">
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
                                                                  Storyboard.TargetName="path">
                                    <EasingThicknessKeyFrame KeyTime="0" Value="40,0,0,0"/>
                                </ThicknessAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnUnchecked">
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
                                                                  Storyboard.TargetName="path">
                                    <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                </ThicknessAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="toggleBorder"
                                CornerRadius="13"
                                Background="Green"
                                Width="60"
                                Height="26"
                                BorderThickness="1"
                                BorderBrush="Black">
                            <Grid>
                                <Path x:Name="path">
                                    <Path.Fill>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                            <GradientStop Color="White"/>
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                    <Path.Data>
                                        <GeometryGroup>
                                            <GeometryGroup.Children>
                                                <EllipseGeometry Center="6,12" RadiusX="9" RadiusY="9"/>
                                            </GeometryGroup.Children>
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard Storyboard="{StaticResource OnChecked}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard Storyboard="{StaticResource OnUnchecked}"/>
                            </EventTrigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="DimGray"/>
                                <Setter TargetName="toggleBorder" Property="Background" Value="Green"/>
                                <Setter TargetName="toggleBorder" Property="BorderBrush" Value="Green"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="toggleBorder" Property="Background" Value="LightGray"/>
                                <Setter TargetName="path" Property="Fill">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                            <GradientStop Color="Gray"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="path" Property="Data">
                                    <Setter.Value>
                                        <GeometryGroup>
                                            <GeometryGroup.Children>
                                                <EllipseGeometry Center="13,12" RadiusX="9" RadiusY="9"/>
                                            </GeometryGroup.Children>
                                        </GeometryGroup>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <!-- High Contrast -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=IsHighContrastWhite, Source={x:Static local:HighContrastHelper.Instance}}" Value="true" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="true"/>
                                    <Condition Binding="{Binding ElementName=toggleButton, Path=IsChecked}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="toggleBorder" Property="Background" Value="Blue"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=IsHighContrastWhite, Source={x:Static local:HighContrastHelper.Instance}}" Value="true" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="true"/>
                                    <Condition Binding="{Binding ElementName=toggleButton, Path=IsChecked}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="toggleBorder" Property="Background" Value="Black"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=IsHighContrastBlack, Source={x:Static local:HighContrastHelper.Instance}}" Value="true" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="true"/>
                                    <Condition Binding="{Binding ElementName=toggleButton, Path=IsChecked}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="toggleBorder" Property="Background" Value="Aqua"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=IsHighContrastBlack, Source={x:Static local:HighContrastHelper.Instance}}" Value="true" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="true"/>
                                    <Condition Binding="{Binding ElementName=toggleButton, Path=IsChecked}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="toggleBorder" Property="Background" Value="Yellow"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid HorizontalAlignment="Center"
              VerticalAlignment="Center">
            <TextBlock x:Name="txtStatus"
                       Text="Toggle Button is UnChecked.">
            </TextBlock>
        </Grid>
        <ToggleButton x:Name="toggleButton"
                      Grid.Column="1"
                      IsChecked="False"
                      Checked="ToggleButton_Checked"
                      Unchecked="ToggleButton_Unchecked"
                      Style="{StaticResource ToggleButtonStyle}"
                      AutomationProperties.Name="CustomizedToggle"
                      AutomationProperties.AutomationId="CustomizedToggle">
        </ToggleButton>
    </Grid>
</Window>
